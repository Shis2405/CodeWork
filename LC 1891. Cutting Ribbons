class Solution {
    public int maxLength(int[] ribbons, int k) {
        int max=Integer.MAX_VALUE,min=0,ans=0;
        for(int val:ribbons){
            
            max=Math.max(val,max);
            }
            int lo=1;
            int hi=max;

            while(lo<=hi){
                int mid=lo+(hi-lo)/2;

                if(isPossible(ribbons,mid,k)){
                    ans=mid;
                    lo=mid+1;
                }
                else hi=mid-1;
            }
            return hi;
    }

    boolean isPossible(int [] ribbons, int mid, int k){
        int count=0;

        for(int i=0;i< ribbons.length;i++){
            count +=ribbons[i]/mid;

        }

            
                return count>=k;
    }
}
