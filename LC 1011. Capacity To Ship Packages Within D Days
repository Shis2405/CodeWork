class Solution {
    public int shipWithinDays(int[] weights, int days) {
        int max=0,s=0,ans=0;
        for(int val: weights){
           max=Math.max(max,val);
           s+=val;

        }

        int low=max;
        int high=s;
        while(low<=high){
            int mid=low+(high-low)/2;
            if(isPossible(weights,mid,days)){
                ans=mid;
                high=mid-1;

            }
            else low=mid+1;
        
        }
        return low;
    }
   boolean isPossible(int[] weights, int mid, int days){
       int numdays=1;
       int sum=0;
       for(int i=0;i<weights.length;i++){
           if(weights[i]>mid){
            return false;
           }
           sum +=weights[i];
       

       if(sum>mid){
           sum=weights[i];
           numdays++;
       }
       }
    return numdays <= days;
}
}
